//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
    provider="postgresql"
    url=env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Example {
    id String @id() @default(uuid())
    details String
}

model Post {
    id Int @id() @default(autoincrement())
    title String
    content String?
    published Boolean @default(false)
    authorId Int
}

/// @@Gen.model(hide: true)
model Account {
    id String @id() @default(cuid())
    userId String
    type String
    provider String
    providerAccountId String
    refresh_token String?
    access_token String?
    expires_at Int?
    refresh_token_expires_in Int?
    token_type String?
    scope String?
    id_token String?
    session_state String?
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    @@unique([provider, providerAccountId])
}

/// @@Gen.model(hide: true)
model Session {
    id String @id() @default(cuid())
    sessionToken String @unique()
    userId String
    expires DateTime
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id String @id() @default(cuid())
    email String? @unique()
    name String?
    image String?
    emailVerified DateTime?
    accounts Account[]
    sessions Session[]
    cart Cart?
}

/// @@Gen.model(hide: true)
model VerificationToken {
    identifier String
    token String @unique()
    expires DateTime
    @@unique([identifier, token])
}

model Product {
    id Int @id() @default(autoincrement())
    title String
    description String?
    price Float
    img String
    stripe String
    productImg String?
    type String?
    audience String?
    quantity Int? @default(100)
    cartId Int?
    cart Cart? @relation(fields: [cartId], references: [id])
}

model Cart {
    id Int @id() @default(autoincrement())
    products Product[]
    user User? @relation(fields: [userId], references: [id])
    userId String? @unique()
}