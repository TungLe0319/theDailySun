generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Example {
  id      String @id @default(uuid())
  details String
}

model Post {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)
  authorId  Int
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String?
  access_token             String?
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?
  session_state            String?
  refresh_token_expires_in Int?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String    @id @default(cuid())
  email         String?   @unique
  name          String?
  image         String?
  emailVerified DateTime?
  role          Role      @default(USER)
  accounts      Account[]
  cart          Cart?
  receipts      Receipt[]
  sessions      Session[]
}

model Receipt {
  id            Int     @id @default(autoincrement())
  url           String?
  userId        String
  receiptId String?
  user          User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Product {
  id          Int     @id @default(autoincrement())
  title       String
  description String?
  price       Float
  img         String
  type        String?
  audience    String?
  quantity    Int?    @default(0)
  priceID     String?
  stripeID    String?
  cart        Cart[]  @relation("CartToProduct")
}

model Cart {
  userId   String?   @unique
  id       Int       @id @default(autoincrement())
  user     User?     @relation(fields: [userId], references: [id])
  products Product[] @relation("CartToProduct")
}

enum Role {
  USER
  ADMIN
}
